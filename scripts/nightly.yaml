variables:

  Major: '4'
  Minor: '8'
  Patch: '16'
  NightlyVersion: $(Major).$(Minor).$(Patch).$(Build.BuildId)-$(Build.DefinitionName)
  MacFlags: 'CXXFLAGS="-arch arm64 -arch x86_64" LINK_EXTRA_FLAGS="-arch arm64 -arch x86_64" SLINK_EXTRA_FLAGS="-arch arm64 -arch x86_64" FPMATH_ENABLED=False'

stages:
- stage: Build
  jobs:
  - job: Windows32
    displayName: "Windows 32-bit build"
    pool:
      vmImage: "windows-latest"
    steps:
    - task: CmdLine@2
      inputs:
        script:
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86 &
          python scripts\mk_win_dist.py
            --x86-only
            --dotnet-key=$(Build.SourcesDirectory)/resources/z3.snk
            --zip
    - task: CopyFiles@2
      inputs:
        sourceFolder: dist
        contents: '*.zip'
        targetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)
        artifactName: 'Windows32'
        
- stage: NugetPublishNightly
  jobs:
   # Publish to nightly feed on Azure
  - job: NuGetPublishNightly
    displayName: "Push nuget packages to Azure Feed"
    steps:
    - task: NuGetAuthenticate@0
      displayName: 'NuGet Authenticate'
    - task: NuGetToolInstaller@0
      inputs:
        versionSpec: 5.x
        checkLatest: false
    - task: DownloadPipelineArtifact@2
      displayName: 'Download NuGet x86 Package'
      inputs:
        artifact: 'NuGet32'
        path: $(Agent.TempDirectory)/x86
    - task: NuGetCommand@2
      displayName: 'NuGet Nightly x86 push'
      inputs:
        command: push
        publishVstsFeed: 'Z3-Public-Nightly'
        packagesToPush: $(Agent.TempDirectory)/x86/*.nupkg
        allowPackageConflicts: true

# TBD: run regression tests on generated binaries.
